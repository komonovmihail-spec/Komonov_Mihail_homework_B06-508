import pygame
import random

pygame.init()

# базовые настройки
W, H = 600, 600
FPS = 60
WHITE = (255, 255, 255)
RED = (255, 0, 0)
key_sound = pygame.mixer.Sound("cluck.wav")

# скорости и размеры
EGG_SPEED = 2
PLAYER_SPEED = 5
EGG_SIZE = 60
MAX_MISSED_IN_ROW = 3
SPAWN_INTERVAL_MS = 3000

# точки спавна
SPAWN_POINTS = [(50, 50), (50, 300), (550, 50), (550, 300)]

# настройки экрана
screen = pygame.display.set_mode((W, H))
pygame.display.set_caption("Egg Catcher")
clock = pygame.time.Clock()
font = pygame.font.Font(None, 36)

# background
try:
	background = pygame.image.load("fon.jpg").convert()
	background = pygame.transform.smoothscale(background, (W, H))
except Exception:
	background = pygame.Surface((W, H))
	background.fill((30, 30, 30))

# корзина
try:
	basket = pygame.image.load("basket.jpg").convert_alpha()
	basket = pygame.transform.smoothscale(basket, (50, 50))
except Exception:
	basket = pygame.Surface((50, 50), pygame.SRCALPHA)
	basket.fill((180, 120, 35))
BASKET_W, BASKET_H = basket.get_width(), basket.get_height()

# яйцо
try:
	egg_img = pygame.image.load("egg.jpg").convert()
	bg_key = egg_img.get_at((0, 0))[:3]
	egg_img.set_colorkey(bg_key)
	egg = pygame.transform.smoothscale(egg_img, (EGG_SIZE, EGG_SIZE))
except Exception:
	egg = pygame.Surface((EGG_SIZE, EGG_SIZE), pygame.SRCALPHA)
	pygame.draw.ellipse(egg, (245, 234, 197), egg.get_rect())
	pygame.draw.ellipse(egg, (200, 185, 150), egg.get_rect(), 2)
EGG_W, EGG_H = egg.get_width(), egg.get_height()

# game state
player_x = W // 2 - BASKET_W // 2
player_y = H - 50 - BASKET_H

# яйца: [x_center, y_center, dx, dy, caught, missed]
eggs = []
last_spawn = 0
score = 0
missed_in_row = 0
game_over = False
running = True
key_sound.play()

while running:
	now = pygame.time.get_ticks()
	clock.tick(FPS)

	for e in pygame.event.get():
		if e.type == pygame.QUIT:
			running = False
		if e.type == pygame.KEYDOWN:
			if e.key == pygame.K_ESCAPE:
				running = False
			if e.key == pygame.K_r and game_over:
				eggs = []
				score = 0
				missed_in_row = 0
				game_over = False
				player_x = W // 2 - BASKET_W // 2
				last_spawn = now
                
	if not game_over:
		keys = pygame.key.get_pressed()
		if keys[pygame.K_LEFT] and player_x > 0:
			player_x -= PLAYER_SPEED
		if keys[pygame.K_RIGHT] and player_x < W - BASKET_W:
			player_x += PLAYER_SPEED

		# спавн с диагональным движением
		if now - last_spawn > SPAWN_INTERVAL_MS:
			x, y = random.choice(SPAWN_POINTS)
			# обеспечение горизонтального дрейфа
			dx = random.choice([-1, 1]) * EGG_SPEED * random.uniform(0.6, 1.2)
			dy = EGG_SPEED * random.uniform(0.9, 1.3)
			eggs.append([x, y, dx, dy, False, False])
			last_spawn = now
            
		# обновить яйца (отскакивают влево/вправо, чтобы никогда не покидать экран)
		for eg in eggs:
			if not eg[4] and not eg[5]:
				eg[0] += eg[2]
				eg[1] += eg[3]

				# отскакивание от боковых стенок, чтобы оставаться внутри экрана
				left_bound = EGG_W // 2
				right_bound = W - EGG_W // 2
				if eg[0] < left_bound:
					eg[0] = left_bound
					eg[2] = abs(eg[2])
				elif eg[0] > right_bound:
					eg[0] = right_bound
					eg[2] = -abs(eg[2])

				egg_rect = egg.get_rect(center=(eg[0], eg[1]))
				player_rect = pygame.Rect(player_x, player_y, BASKET_W, BASKET_H)
				if egg_rect.colliderect(player_rect):
					eg[4] = True
					score += 10
					missed_in_row = 0

				# промах только при падении ниже дна (x всегда внутри из-за отскока)
				if eg[1] > H + (EGG_H // 2):
					if not eg[4]:
						eg[5] = True
						missed_in_row += 1
						if missed_in_row >= MAX_MISSED_IN_ROW:
							game_over = True

		eggs = [eg for eg in eggs if not eg[4] and not eg[5]]

	screen.blit(background, (0, 0))

	for eg in eggs:
		if not eg[4] and not eg[5]:
			r = egg.get_rect(center=(int(eg[0]), int(eg[1])))
			screen.blit(egg, r)

	screen.blit(basket, (player_x, player_y))

	score_text = font.render(f"Score: {score}", True, WHITE)
	miss_text = font.render(f"Missed: {missed_in_row}/{MAX_MISSED_IN_ROW}", True, WHITE)
	screen.blit(score_text, (10, 10))
	screen.blit(miss_text, (10, 40))

	if game_over:
		go = font.render("GAME OVER! Press R to restart", True, RED)
		screen.blit(go, (W // 2 - go.get_width() // 2, H // 2 - go.get_height() // 2))
	else:
		help_t = font.render("LEFT/RIGHT to move (diagonal eggs, no off-screen)", True, WHITE)
		screen.blit(help_t, (10, H - 30))

	pygame.display.flip()

pygame.quit()